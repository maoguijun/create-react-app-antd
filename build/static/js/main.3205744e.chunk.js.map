{"version":3,"sources":["containers/sensitive/actions/index.js","containers/sensitive/container/index.js","routes.js","config.js","containers/sensitive/index.js","components/BaseLayout/index.js","App.js","serviceWorker.js","containers/sensitive/reducers/index.js","reducers/index.js","store/index.js","index.js"],"names":["getStars","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","result","wrap","_context","prev","next","axios","method","url","baseURL","params","limit","sent","type","value","data","stop","this","_x","_x2","apply","arguments","addNumber","deleteNumber","TextArea","Sensitive","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","name","target","setState","defineProperty","concat","submit","_this$state","state","keywords","replacement","step","text","initObj","split","Number","time1Start","Date","swhp","SWHP","time1End","time2Start","filterSync","time2End","filterText","time1","time2","_this2","_this$state2","react_default","createElement","row","className","col","span","key","placeholder","input","maxLength","offset","es_button","onClick","Component","connect","ownProps","console","log","objectSpread","bindActionCreators","actions","routes","path","base","counter","excel2json","sensitive","component","Header","Content","Footer","BaseLayout","pathJump","history","push","_this$props","children","keys","pathname","arr","forEach","includes","getkey","location","layout","menu","theme","mode","selectedKeys","onSelect","style","lineHeight","map","_ref2","Item","padding","background","minHeight","textAlign","App","withRouter","store","es","BrowserRouter","Switch","index","Route","exact","Boolean","window","hostname","match","CounterInitialState","stars","Counter","length","undefined","action","combineReducers","loggerMiddleware","createLogger","preloadedState","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3205744e.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getStars = () => {\n  return async(dispatch, getState) => {\n    const result = await axios({\n      method: 'get',\n      url: '/a.json',\n      baseURL: '',\n      params: {\n        limit: 100\n      }\n    })\n    dispatch({type: 'STAR', value: result.data})\n\n  }\n\n}\nexport const addNumber = (value) => ({type: 'ADD', value})\nexport const deleteNumber = (value) => ({type: 'DELETE', value})\n","import { Col, Input, Row, Button } from 'antd';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\nimport SWHP from 'sensitive-word-helper-plus';\nimport './index.less';\nconst { TextArea } = Input;\n\nclass Sensitive extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time1: '',\n      time2: ''\n    };\n  }\n\n  onChange = (e, name) => {\n    const {\n      target: { value }\n    } = e;\n    this.setState({\n      [`${name}`]: value\n    });\n  };\n\n  submit = () => {\n    const { keywords, replacement, step, text } = this.state;\n    const keywords_ = keywords.split('~');\n    const initObj = {\n      keywords: keywords_\n    };\n    if (step) {\n      initObj.step = Number(step);\n    }\n    if (replacement) {\n      initObj.replacement = replacement;\n    }\n    const time1Start = Number(new Date());\n    const swhp = new SWHP(initObj);\n    const time1End = Number(new Date());\n\n    const time2Start = Number(new Date());\n    const result = swhp.filterSync(text);\n    const time2End = Number(new Date());\n    // console.log(result, swhp);\n    this.setState({\n      filterText: result.text,\n      time1: time1End - time1Start,\n      time2: time2End - time2Start\n    });\n  };\n\n  render() {\n    const {\n      keywords,\n      replacement,\n      step,\n      text,\n      filterText,\n      time1,\n      time2\n    } = this.state;\n    return (\n      <Row className={'sensitive-wrap'}>\n        <Col span={12} className={'left-wrap'} key={'left'}>\n          <Row className='item'>\n            <Col span={6} className='label'>\n              敏感词\n            </Col>\n            <Col span={14}>\n              <TextArea\n                value={keywords}\n                onChange={e => this.onChange(e, 'keywords')}\n                placeholder='多个敏感词用 ~ 隔开'\n              />\n            </Col>\n          </Row>\n          <Row className='item'>\n            <Col span={6} className='label'>\n              步数\n            </Col>\n            <Col span={14}>\n              <Input\n                value={step}\n                onChange={e => this.onChange(e, 'step')}\n                placeholder='非负整数, 可以不输人， 默认为 3'\n              />\n            </Col>\n          </Row>\n          <Row className='item'>\n            <Col span={6} className='label'>\n              需要替换的符号\n            </Col>\n            <Col span={14}>\n              <Input\n                value={replacement}\n                onChange={e => this.onChange(e, 'replacement')}\n                placeholder='默认为 *'\n              />\n            </Col>\n          </Row>\n          <Row className='item'>\n            <Col span={6} className='label'>\n              需要检验的文字\n            </Col>\n            <Col span={14}>\n              <TextArea\n                value={text}\n                onChange={e => this.onChange(e, 'text')}\n                maxLength={20000}\n                \n              />\n            </Col>\n          </Row>\n          <Row className='item'>\n            <Col span={14} offset={6}>\n              <Button type='primary' onClick={this.submit}>\n                校验\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={12} className={'right-wrap'} key={'right'}>\n          <Row className='item'>\n            <Col span={6} className='label'>\n              构建节点树耗时\n            </Col>\n            <Col span={14}>{time1} ms</Col>\n          </Row>\n          <Row className='item'>\n            <Col span={6} className='label'>\n              文章过滤耗时\n            </Col>\n            <Col span={14}>{time2} ms</Col>\n          </Row>\n          <Row className='item'>\n            <Col span={6} className='label'>\n              过滤后的文字\n            </Col>\n            <Col span={14}>{filterText}</Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  ...bindActionCreators(\n    {\n      ...actions\n    },\n    dispatch\n  )\n});\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state);\n  return { Sensitive: state.Sensitive };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sensitive);\n","import Sensitive from './containers/sensitive';\nimport { routePath } from './config';\n\nconst routes = [\n  {\n    path: routePath.sensitive,\n    component: Sensitive,\n    name: 'sensitive'\n  }\n];\nexport default routes;\n","export const routePath = {\n  base: '/',\n  counter: '/counter',\n  excel2json: '/excel2json'\n}","import Sensitive from './container';\nexport default Sensitive;\n","import React, {Component} from 'react';\nimport {Layout, Breadcrumb, Menu} from 'antd'\nimport {withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport routes from '../../routes';\nconst {Header, Content, Footer} = Layout;\n\nconst getkey = (pathname) => {\n  let arr = []\n  routes.forEach(({path}) => {\n    console.log(pathname, path)\n    if (pathname.includes(path)) {\n      arr.push(path)\n    }\n  })\n  return arr\n}\nclass BaseLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n  pathJump = path => {\n    const {history} = this.props\n    history.push(path)\n  }\n  render() {\n    const {children, location: {\n        pathname\n      }} = this.props\n    const keys = getkey(pathname)\n    console.log(12, this.props)\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\"/>\n          <Menu\n            theme=\"light\"\n            mode=\"horizontal\"\n            selectedKeys={keys}\n            onSelect={value => {\n            this.pathJump(value.key)\n          }}\n            style={{\n            lineHeight: '64px'\n          }}>\n            {routes.map(({path, name}) => (\n              <Menu.Item key={path}>{name}</Menu.Item>\n            ))}\n          </Menu>\n        </Header>\n        <Content style={{\n          padding: '0 50px'\n        }}>\n          {/* <Breadcrumb style={{\n            margin: '16px 0'\n          }}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n            <Breadcrumb.Item>List</Breadcrumb.Item>\n            <Breadcrumb.Item>App</Breadcrumb.Item>\n          </Breadcrumb> */}\n          <div\n            style={{\n            background: '#fff',\n            padding: 24,\n            minHeight: 280\n          }}>{children}</div>\n        </Content>\n        <Footer style={{\n          textAlign: 'center'\n        }}>\n          Ant Design ©2018 Created by Ant UED\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default connect()(withRouter(BaseLayout));","// src/App.js\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport BaseLayout from './components/BaseLayout';\nimport routes from './routes';\nimport './App.less';\nimport { routePath } from './config';\n\nclass App extends Component {\n  render() {\n    const { store } = this.props;\n    return (\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            {/* <BaseLayout>\n            </BaseLayout> */}\n            {routes.map(({ path, component }, index) => (\n              <Route\n                exact\n                key={path || index}\n                path={path}\n                component={component}\n              />\n            ))}\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const CounterInitialState = {\n  value: 0,\n  stars: 0\n}\nconst Counter = (state = CounterInitialState, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return {\n        ...state,\n        value: state.value + action.value\n      }\n    case 'DELETE':\n      return {\n        ...state,\n        value: state.value - action.value\n      }\n    case 'STAR':\n      return {\n        ...state,\n        stars: action.value.stars\n      }\n    default:\n      return state\n  }\n}\nexport default Counter","import { combineReducers } from 'redux';\n\nimport Sensitive from '../containers/sensitive/reducers';\n\nexport default combineReducers({ Sensitive });\n","import {createStore, applyMiddleware} from 'redux'\n// import {browserHistory} from 'react-router' import {routerMiddleware} from\n// 'react-router-redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {createLogger} from 'redux-logger'\nimport rootReducer from '../reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n  return createStore(rootReducer, preloadedState, applyMiddleware(thunkMiddleware, loggerMiddleware))\n}","import 'babel-polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store';\nconst store = configureStore()\n\nReactDOM.render(\n  <App store={store}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}